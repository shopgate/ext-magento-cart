{
	"info": {
		"_postman_id": "719121d5-f784-4079-a4b0-d1213ea6dce5",
		"name": "Magento Connect - Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customer",
			"item": [
				{
					"name": "Preparation",
					"item": [
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73f7922e-ca38-4f28-855f-6db6b6e0dd01",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_user_logout}}",
									"host": [
										"{{domain}}{{endpoint_user_logout}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73f7922e-ca38-4f28-855f-6db6b6e0dd01",
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"strategy\": \"basic\",\n\t\"parameters\": {\n\t\t\"login\": \"{{username}}\",\n\t\t\"password\": \"{{password}}\"\n\t}\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_user_login}}",
									"host": [
										"{{domain}}{{endpoint_user_login}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get/add",
					"item": [
						{
							"name": "There is no product with text input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '553')",
											"pm.test('Cart item with input text is not there', () => {",
											"    pm.expect(desiredCartItem).to.be.an('undefined')",
											"})",
											"const desiredCartItem2 = response.cartItems.find(item => item.product && item.product.id === '370')",
											"pm.test('Cart item with input text is not there', () => {",
											"    pm.expect(desiredCartItem2).to.be.an('undefined')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with text field input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 553,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"7\",\n\t\t\t\t\t\"value\": \"DEMO Text\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Product with input text field exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '553')",
											"pm.test('Existing cart item with input text', () => {",
											"    const {product: {properties}} = desiredCartItem",
											"    pm.expect(desiredCartItem).to.be.an('object')",
											"    pm.expect(properties).to.be.an('array')",
											"    const textInputProperty = properties[0]",
											"    pm.expect(textInputProperty.type).to.equal('option')",
											"    pm.expect(textInputProperty.label).to.equal('Engraving')",
											"    pm.expect(textInputProperty.value).to.equal('DEMO Text')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with text area input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 370,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"4\",\n\t\t\t\t\t\"value\": \"DEMO Text\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Product with input text area exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '370')",
											"pm.test('Existing cart item with input text', () => {",
											"    const {product: {properties}} = desiredCartItem",
											"    pm.expect(desiredCartItem).to.be.an('object')",
											"    pm.expect(properties).to.be.an('array')",
											"    const textInputProperty = properties[0]",
											"    pm.expect(textInputProperty.type).to.equal('option')",
											"    pm.expect(textInputProperty.label).to.equal('Monogramming')",
											"    pm.expect(textInputProperty.value).to.equal('DEMO Text')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with invalid text field input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 500', function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test('Error is thrown', function () {",
											"    pm.expect(response.error.code).to.equal('EINVALIDITEM')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 553,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"7\",\n\t\t\t\t\t\"value\": \"DEMO Text is too long\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37d18603-95e4-4279-8b95-18604c158fe2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c23445de-5939-4686-aeec-84ae803f1942",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Guest",
			"item": [
				{
					"name": "Preparation",
					"item": [
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73f7922e-ca38-4f28-855f-6db6b6e0dd01",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_user_logout}}",
									"host": [
										"{{domain}}{{endpoint_user_logout}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get/add",
					"item": [
						{
							"name": "There is no product with text input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '553')",
											"pm.test('Cart item with input text is not there', () => {",
											"    pm.expect(desiredCartItem).to.be.an('undefined')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with text field input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 553,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"7\",\n\t\t\t\t\t\"value\": \"DEMO Text\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Product with input text field exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '553')",
											"pm.test('Existing cart item with input text', () => {",
											"    const {product: {properties}} = desiredCartItem",
											"    pm.expect(desiredCartItem).to.be.an('object')",
											"    pm.expect(properties).to.be.an('array')",
											"    const textInputProperty = properties[0]",
											"    pm.expect(textInputProperty.type).to.equal('option')",
											"    pm.expect(textInputProperty.label).to.equal('Engraving')",
											"    pm.expect(textInputProperty.value).to.equal('DEMO Text')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with text area input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 370,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"4\",\n\t\t\t\t\t\"value\": \"DEMO Text\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Product with input text area exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const desiredCartItem = response.cartItems.find(item => item.product && item.product.id === '370')",
											"pm.test('Existing cart item with input text', () => {",
											"    const {product: {properties}} = desiredCartItem",
											"    pm.expect(desiredCartItem).to.be.an('object')",
											"    pm.expect(properties).to.be.an('array')",
											"    const textInputProperty = properties[0]",
											"    pm.expect(textInputProperty.type).to.equal('option')",
											"    pm.expect(textInputProperty.label).to.equal('Monogramming')",
											"    pm.expect(textInputProperty.value).to.equal('DEMO Text')",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_get}}",
									"host": [
										"{{domain}}{{endpoint_cart_get}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a simple product with invalid text field input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd67dd2-faf6-4720-8031-cbf3a65d0a32",
										"exec": [
											"const response = pm.response.json()",
											"",
											"pm.test('Status code is 500', function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test('Error is thrown', function () {",
											"    pm.expect(response.error.code).to.equal('EINVALIDITEM')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"products\": [\n\t\t{\n\t\t\t\"productId\": 553,\n\t\t\t\"quantity\": 1,\n\t\t\t\"properties\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input\",\n\t\t\t\t\t\"id\": \"7\",\n\t\t\t\t\t\"value\": \"DEMO Text is too long\"\n\t\t\t\t}\n\t\t\t\t]\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "{{domain}}{{endpoint_cart_products_add}}",
									"host": [
										"{{domain}}{{endpoint_cart_products_add}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37d18603-95e4-4279-8b95-18604c158fe2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c23445de-5939-4686-aeec-84ae803f1942",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}
